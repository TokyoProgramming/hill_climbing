read.table("C:\Users\m19ss\Documents\TA\shibou.txt")
read.table("C:/Users/m19ss/Documents/TA/shibou.txt")
read.table("C:/Users/m19ss/Documents/TA/shibou.txt")
read.table("C:/Users/m19ss/Documents/TA/shibou.txt")
read.table("C:/Users/m19ss/Documents/TA/shibou.txt")
read.table("C:/Users/m19ss/Documents/TA/shibou.txt")
read.table("C:/Users/m19ss/Documents/TA/shibou.txt")
read.table("C:/Users/m19ss/Documents/TA/勤務/shibou.txt")
data <- read.table("C:/Users/m19ss/Documents/TA/勤務/shibou.txt")
data
col <- c('総数','施設内総数', '病院', '診療所', '介護医療院介護老人保健施設', '介護医療院', '老人ホーム', '施設外総数', '自宅', 'その他')
mydata(data) <- col
names(data) <- col
data
data
row <- c('全国',
'市',
'郡部',
'北海道',
'青森県',
'岩手県',
'宮城県',
'秋田県',
'山形県',
'福島県',
'茨城県',
'栃木県',
'群馬県',
'埼玉県',
'千葉県',
'東京都',
'神奈川県',
'新潟県',
'富山県',
'石川県',
'福井県',
'山梨県',
'長野県',
'岐阜県',
'静岡県',
'愛知県',
'三重県',
'滋賀県',
'京都府',
'大阪府',
'兵庫県',
'奈良県',
'和歌山県',
'鳥取県',
'島根県',
'岡山県',
'広島県',
'山口県',
'徳島県',
'香川県',
'愛媛県',
'高知県',
'福岡県',
'佐賀県',
'長崎県',
'熊本県',
'大分県',
'宮崎県',
'鹿児島県',
'沖縄県',
)
library(bnlearn)
b1 = hc(camera, score='bic-g')
camera
camera <- read.table("E:/修士論文/修士論文/R/essay/hill_climbing02s/camera.txt")
camera
b1 = hc(camera, score='bic-g')
camera <- read.table("E:/修士論文/修士論文/R/essay/hill_climbing02s/camera.txt",header=T)
camera
b1 = hc(camera, score='bic-g')
camera <- read.table("E:/修士論文/修士論文/R/essay/hill_climbing02s/camera.txt",header=T)
source('E:/修士論文/修士論文/R/essay/hill_climbing02s/main3s.R')
main(camera)
camera
b1 = hc(camera, score='bic-g')
df2 <- data.frame(t(camera[-1]))
colnames(df2) <- camera[,1]
df2
b1 = hc(df2, score='bic-g')
View(df2)
class(iris)
iris.t <- t(iris)
class(iris.t)
iris.t <- as.data.frame(t(iris))
iris.t
class(camera)
camera.t <- t(camera)
camera.t
camera.t <- as.data.frame(t(camera))
camera.t
View(camera.t)
b1 = hc(camera.t, score='bic-g')
b1 = hc(camera.t, score='bic-g')
print(hc(camera))
camera <- read.table("E:/修士論文/修士論文/R/essay/hill_climbing02s/camera.txt",header=T)
camera <- read.table("E:/修士論文/修士論文/R/essay/hill_climbing02s/camera.txt",header=F)
camera
camera <- read.table("E:/修士論文/修士論文/R/essay/hill_climbing02s/camera.txt",header = T)
camera
camera_new <- read.table("E:/修士論文/修士論文/R/essay/hill_climbing02s/camera_new.txt",header = T)
camera_new
print(hc(camera_new))
camera_df <- df(camera_new)
name <- c('sl', 'be', 'oe', sum)
name <- c('sl', 'be', 'oe', 'sum')
data <- data.frame(camera_new)
data
names(data) <- name
data
data
head(data)
hc(data)
data <- data.frame(data)
data
hc(data)
camera_new <- as.matrix(read.table("E:/修士論文/修士論文/R/essay/hill_climbing02s/camera_new.txt",header = T))
camera_new
hc(camera_new)
camera_new <- read.table("E:/修士論文/修士論文/R/essay/hill_climbing02s/camera_new.txt",header = T)
data
dag = empty.graph(c())
head(data)
dag = empty.graph(c('sl','be','oe','sum'))
arcs(dag) = arc.set
e = empty.graph(LETTERS[1:6])
e
class(e)
empty.graph(LETTERS[1:6], num = 2)
arc.set = matrix(c("A", "C", "B", "F", "C", "F"),
+             ncol = 2, byrow = TRUE,
+             dimnames = list(NULL, c("from", "to")))
arc.set = matrix(c("A", "C", "B", "F", "C", "F"),
+             ncol = 2, byrow = TRUE,
+             dimnames = list(NULL, c("from", "to")))
arc.set = matrix(c('A', 'C', 'B', 'F','C','F'),ncol =2 , byrow =TRUE, dimnames = list(NULL, c('from','to')))
arc.set
arcs(e) = arc.set
e
data(lizards)
lizards
boot.strength(camera, algorithm = 'hc')
boot.strength(camera+new, algorithm = 'hc')
boot.strength(camera_new, algorithm = 'hc')
boot.strength(data, algorithm = 'hc')
boot.strength(learning.test, algorithm = "hc")
learning.test
head(learning.test)
data.type(learning.test)
hc(learning.test)
print(hc(learning.test))
dag = hc(learning.test)
dag .matrix
dag.matrix
dag.matrix
print(hc(learning.test))
print(hc(learning.test))
print(hc(learning.test))
print(hc(learning.test))
print(hc(learning.test))
print(hc(learning.test))
print(hc(learning.test))
print(hc(learning.test))
dag = hc(learning.test, score = 'bic-g')
dag = hc(learning.test, score = 'bic')
dag
dag = hc(learning.test, score = 'bic', restart = 100)
dag
graphviz.plot(dag, layout = "dot")
graphviz.plot(dag, layout = "dot")
graphviz.plot(dag, layout = "dot")
graphviz.plot(dag, layout = "dot")
graphviz.plot(dag, layout = "dot")
graphviz.plot(dag, layout = "dot")
data(data)
library(gRain)
dag = hc(learning.test)
fitted.bnlearn = bn.fit(dag, learning.test)
fitted.grain = as.grain(fitted.bnlearn)
fitted.grain
dag.gbn = hc(gaussian.test)
fitted.gbn = bn.fit(dag.gbn, gaussian.test)
as.grain(fitted.gbn)
fitted.sparse = bn.fit(dag, learning.test[1:10, ])
as.grain(fitted.sparse)
fitted.import = as.bn.fit(fitted.grain)
all.equal(fitted.bnlearn, fitted.import)
dag.import = as.bn(fitted.grain)
all.equal(dag, dag.import)
fitted.with.evidence = setEvidence(fitted.grain, node = "B", state = "b")
as.bn.fit(fitted.with.evidence)$B
source('E:/修士論文/修士論文/R/essay/hill_climbing02s/create_df04s.R')
library(bnlearn)
data(learning.test)
learning.test
learn.net = empty.graph(names(learning.test))
learn.net
modelstring(learn.net) = "[A][C][F][B|A][D|A:C][E|B:F]"
learn.net
score(learn.net, learning.test)
hc(learning.test)
print(hc(learning.test))
res <- hc(learning.test)
res
score(res)
score(res, learning.net)
score(res, learning.test)
hc(camara)
hc(data)
data
View(data)
View(learning.test)
sapply(learning.test, class)
sapply(data, class)
str(data)
str(learning.test)
factor(data)
new-data <- factor(data)
new_data <- factor(data)
new_data
str(new_data)
class(new_data)
levels(new_data)
hc(new_data)
data.frame(new_data)
as.matrix(new_data)
data
head(data)
typeof(data$sl)
typeof(data$be)
typeof(data$oe)
typeof(data$sum)
class(data$sl)
df[, 'sl'] <- facotr(df[,'sl'])
df[, 'sl'] <- factor(df[,'sl'])
data(lizards)
lizards
data(asia)
head(asia)
data(coronary)
head(coronary)
data(alarm)
head(alarm)
data(insurance)
head(insuarance)
head(insurance)
set.seed(123)
norm <- rnorm(4000)
Data <- matrix(norm, nrow = 1000, ncol = 4, byrow = T)
colnames(Data) <- c("Height", "BMI", "SBP", "FBS")
Data
hc(Data)
Data2 <- Data <- as.data.frame(Data)
hc(Data2)
print(hc(Data2))
res <- hc(Data2)
source('E:/修士論文/修士論文/R/essay/hill_climbing02s/main3s.R')
source('E:/修士論文/修士論文/R/essay/hill_climbing02s/main3s.R')
source('E:/修士論文/修士論文/R/essay/hill_climbing02s/main3s.R')
source('E:/修士論文/修士論文/R/essay/hill_climbing02s/main3s.R')
hc(camera)
dasha03
camera
data$sl
s_f <- data$sl
as.factor(s_f)
A <- as.factor(s_f)
data$be
b <- as.factor(data$be)
B <- b
B
C <- as.factor(data$oe)
C
D <- as.factor(data$sum)
D
x <- data.frame(A = A, B =B , C =C, D= D)
x
hc(x)
print(hc(x))
data <- x
data
main(data)
hc(data)
res <- hc(data)
res
plot(res)
res <- hc(data)
plot(res)
res
plot(res)
res <- hc(data)
res
fit <- bn.fit(res, data)
fit
coef <- coefficients(fit)
coef
hc
hc(camera)
library(bnlearn)
hc(camera_new)
hc(camera.t)
camera
hc(data)
res = hc(data, score='bic'm debug=F, max.iter=10000)
res = hc(data, score='bic' debug=F, max.iter=10000)
res = hc(data, score='bic', debug=F, max.iter=10000)
res
res
res = hc(data, score='bic', debug=F, max.iter=10000)
res
res = hc(data, score='bic', debug=F, max.iter=1000)
res
library(bnlearn)
dasha <- read.table("E:\修士論文\修士論文\R\データ\dasha03B.txt", header= T, colClass= factor())
dasha <- read.table("E:/修士論文/修士論文/R/データ/dasha03B.txt", header= T, colClass= factor())
dasha <- read.table("E:/修士論文/修士論文/R/データ/dasha03B.txt", header= T, colClass= factor
)
dasha <- read.table("E:/修士論文/修士論文/R/データ/dasha03B.txt", header= T, colClasses= factor)
dasha <- read.table("E:/修士論文/修士論文/R/データ/dasha03B.txt", header= T, colClasses= 'factor')
dasha
camera <- read.table("E:/修士論文/修士論文/R/データ/camera.txt", header= T, colClasses= 'factor')
camera
hc(camera)
res <- hc(camera)
res
res.model
res.nodes
res.optimized
res
hc
res <- hc(camera, restart = 10)
res
res
res <- hc(camera)
res
res.result
res.nodes:
)
res.nodes
hc(camera).arcs
res.arcs
score(res)
score(res, camera)
score(camera, res)
score(res, camera)
main(camera)
camera_c <- read.table("E:/修士論文/修士論文/R/データ/camera.txt", header= T)
main(camera_c)
adj = matrix(0L, ncol = 4, nrow = 4,
+         dimnames = list(LETTERS[1:4], LETTERS[1:4]))
adj = matrix(0L, ncol=4, nrow=4, dimnames = list(LETTERS[1:4],LETTERS[1:4]))
adj
dj["A", "C"] = 1L
adj["A", "C"] = 1L
adj["A", "D"] = 1L
adj["B", "D"] = 1L
adj["C", "D"] = 1L
adj
amat(e) = adj
amat()
amat(e) adj
adj
amat(e) =  adj
e = empty.graph(LETTERS[1:4])
amat(e) =  adj
e
score(e, camera)
camera
score(e, camera)
score(e, camera, type='bic')
amat(e, check.cycles = TRUE, check.illegal = TRUE, debug = FALSE) <- value
amat(e, check.cycles = TRUE, check.illegal = TRUE, debug = FALSE) <- adj
e
test <- empty.graph(names(camera.test))
test <- empty.graph(names(camera))
modelstring(test) = '[A][B][C|A][D|A:B:C] '
modelstring(test) = '[A][B][C|A][D|A:B:C]'
View(asia)
View(camera)
colnames(camera)[1] <- 'A'
colnames(camera)[2] <- 'B'
colnames(camera)[3] <- 'C'
colnames(camera)[4] <- 'D'
modelstring(test) = '[A][B][C|A][D|A:B:C]'
test <- empty.graph(names(camera))
modelstring(test) = '[A][B][C|A][D|A:B:C]'
test
score(test, camera)
camera
res <- hc(camera)
res
score(res, camera)
e
e
score(e, camera)
b_bill <- main(camera)
b_bill <- main(camera_c)
b_hill.path
b_hill.res.path_array
b_hill.res.path_array[,,a]
b_hill.res.path_array[,,1]
b_hill
b-bill
b_bill
b_bill
b_bill.res.path_array
b_bill.res.path_array[,,1]
score(test,camera)
test2 <- empty.graph(names(camera))
test2
adj["A", "B"] = 1L
adj["B", "D"] = 1L
adj["C", "A"] = 1L
adj["C", "D"] = 1L
adj
adj2 <- matrix(0L, ncol=4, nrow=4, dimnames = list(LETTERS[1:4], LETTERS[1:4]))
adj2["A", "B"] = 1L
adj2["B", "D"] = 1L
adj2["C", "D"] = 1L
adj2["C", "A"] = 1L
adj2
amat(e) = adj2
e
score(e, camera)
score(test2, camera)
score(test, camera)
test
score(test, camera, type='vic')
score(test, camera, type='bic')
score(e, camera, type='bic')
plot(e)
plot(test)
no1 <- e
no3 <- test
no4 <- test
test2
score(no4, camera)
score(no1, camera)
plot(no1)
score(no1, camera, type='aic')
score(no4, camera, type='aic')
print(hc(camera))
res <- hc(camera)
print(res)
score(res, camera)
library(bnlearn)
hc(camera)
res <- hc(camera)
plot(res)
View(camera_c)
